name: Pipeline Back Challenge

on:
  push:
    branches:
      - main

jobs:
  test-app:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 && break || sleep 5
          done

      - name: Create test database
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -c "CREATE DATABASE \"sm-back-end-challenge\";"

      - name: Run migrations
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/sm-back-end-challenge
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Run tests with coverage
        env:
          DJANGO_SETTINGS_MODULE: system.settings
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/sm-back-end-challenge
        run: |
          source venv/bin/activate
          coverage run manage.py test
          coverage report 